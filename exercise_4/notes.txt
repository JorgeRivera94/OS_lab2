    Implement a program in which one process writes a large array (e.g., 1 million integers) into shared memory, and another process reads and sums up the array elements.

    The numbers written into the shared memory block are consecutive integers from 1 to 1,000,000.

    Measure the time from when the first byte is written into memory until the sum of the numbers is plotted on the screen.

    Implement the same program using message queues between the processes instead of shared memory.

    Compare the time performance between the two strategies. 

    Upload a compressed file with the project's folder, including the "src" and "include" directories and the cmakelists.txt file. The program will not be evaluated if it does not compile correctly with the cmakelists.txt file.

writer escribe 1M de datos
reader se suscribe, los lee y calcula la suma
tiempo entre que writer empieza y reader imprime la sume
**usa dos terminales
para lograr la vel maxima:
    lanzen el reader, este crea el bloque para 1M de ints
    hace un wait y se va adormir
espera a que el writer escriba los datos
en terminal > ./writer:
    nace
    se suscribe
    llena el M de datos
    usa un semaforo para post() que despierta el reader
el reader lee los numeros e imprime la suma
esto nos da el tiempo mas rapido posible con memoria compartida
falta medir el tiempo
cuando W escriba el primer numero, que guarde el tiempo en una variable
    se le envia un mensaje al reader y este toma el tiempo final y hace la resta

or
print inicio print final y restar

o reservar la memoria para 1M + 1 y usarlo ese espacio para calcular el tiempo

**manana en clase veremos mensajes**